{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","placeholder","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","rows","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","filter","a1","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitilize","msg","App","setMode","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6fd37c82.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props){\r\n    return(\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n            </li>\r\n            \r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}></input>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title Here\",\r\n    aboutText: \"About Text here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Upper Case button was clicked\");\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n\r\n    const handleDownClick = ()=>{\r\n        console.log(\"Lower case button was clicked\");\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Coverted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handleClear = () =>{\r\n        console.log('Clear button was clicked');\r\n        setText('');\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        console.log(\"Copy button was clicked\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return(\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" >\r\n                <textarea className=\"form-control\" onChange={handleOnChange} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>Your text has {text.split(/[ ] + /).filter((a1)=>{return a1.length!=0}).length} words and {text.length} characters</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitilize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitilize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\nimport './App.css';\n/* import About from './components/About';\n */import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#393840';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils';}\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}></Navbar>\n    <Alert alert = {alert}/>\n    <div className=\"container\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            {<TextForm heading=\"Enter the text here\" mode={mode} showAlert={showAlert}/>}\n          {/* </Route>\n        </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}